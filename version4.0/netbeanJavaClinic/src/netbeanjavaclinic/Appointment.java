/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Dignosis.java
 *
 * Created on 29 Sep, 2011, 11:25:37 PM
 */
package netbeanjavaclinic;

import billingdesktopapplication.MyJPane;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Date;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.text.JTextComponent;
import print.PrintExample;

/**
 *
 * @author DELL
 */
public class Appointment extends javax.swing.JFrame implements ActionListener {
public PatientVO cvo;
int reg;
PrintExample pf2;
    /** Creates new form Dignosis */
    public Appointment()
    {
        
        
    }
    public Appointment(int x,PatientVO cvo) {
        initComponents();
        reg=x;
        this.cvo=cvo;
        jButton1.addActionListener(this);
         jButton2.addActionListener(this);
          jButton3.addActionListener(this);
          
        
          
         this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
           
         
    }

   

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        jDialog1.setName("jDialog1"); // NOI18N

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(netbeanjavaclinic.NetbeanJavaClinicApp.class).getContext().getResourceMap(Appointment.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLabel5.setForeground(new java.awt.Color(102, 0, 102));
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 360, 100, 30));

        jTextField1.setFont(resourceMap.getFont("jTextField1.font")); // NOI18N
        jTextField1.setForeground(resourceMap.getColor("jTextField1.foreground")); // NOI18N
        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 360, 124, 30));

        jButton1.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton1.setForeground(resourceMap.getColor("jButton1.foreground")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 360, 120, 35));

        jButton2.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        jButton2.setForeground(resourceMap.getColor("jButton2.foreground")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 420, 120, 30));

        jButton3.setFont(resourceMap.getFont("jButton3.font")); // NOI18N
        jButton3.setForeground(resourceMap.getColor("jButton3.foreground")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 420, 260, 30));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jList1.setFont(resourceMap.getFont("jList1.font")); // NOI18N
        jList1.setForeground(resourceMap.getColor("jList1.foreground")); // NOI18N
        jList1.setName("jList1"); // NOI18N
        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 30, 260, 310));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Appointment(428,new PatientVO()).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
     public void setText(String s)
     {
         jTextField1.setText(s);
     }
   
    public void actionPerformed(ActionEvent e) {
        
        if(e.getSource()==jButton3){
            
           
            System.exit(0);
        }
     
        if(e.getSource()==jButton2)
      {
         System.out.println("calendar");
     MyJPane mjp=new MyJPane(new JPanel(),this);
            
            Container cp=this.getContentPane() ;
            try{
		cp.add(mjp);
            }catch(Exception e1){
                System.out.println("excep");
            }
                 this.setExtendedState(JFrame.NORMAL); 
                 System.out.println("helll");
                  this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
             // this.resize(1000,1000);
      }
        
      else
      {
            try {
                String s=jTextField1.getText();
                String d[]=s.split("-");
                
                boolean b=checkDt(d);
                if(b==true){
              //  String d1[]={d[2],d[0],d[1]};
                String s1=d[2]+"-"+d[0]+"-"+d[1];
             // Date fd=new Date(Integer.parseInt(d[0]),Integer.parseInt(d[1]),Integer.parseInt(d[2]));
              // System.out.println("ap called");
                
                
               
               
               SimpleDateFormat d1=new SimpleDateFormat("yyyy-dd-mm");
                //  SimpleDateFormat d1=new SimpleDateFormat("dd-mm-yyyy");
                 d1.setLenient(false);
                 
           JFormattedTextField jtff=    new JFormattedTextField(d1);
            //  String s=jTextField1.getText();
              System.out.println("dt"+s1);
              try{
                    d1.parse(s1);
                    
              }
              catch(ParseException pe){
                  
                  
                  System.out.println("in catch");
               JOptionPane.showMessageDialog(jTextField1,"no dt format","Error Dialog",
                     JOptionPane.ERROR_MESSAGE);
              // jTextField1.setText("");
                /*   System.out.println("in catch");
              InputVerifier verifier = new InputVerifier() {
             public boolean verify(JComponent input) {
               final JTextComponent source = (JTextComponent) input;
               JOptionPane.showMessageDialog(source, "Can't leave.", "Error Dialog",
                     JOptionPane.ERROR_MESSAGE);
              /* String text = source.getText();
               if ((text.length() != 0) && !(text.equals("Exit"))) {
                 JOptionPane.showMessageDialog(source, "Can't leave.", "Error Dialog",
                     JOptionPane.ERROR_MESSAGE);
                 return false;
               } else {
                 return false;
               }
             
           };
               jTextField1.setInputVerifier(verifier);
              }*/
          
              }
           //    this.cvo.digno=(String)jComboBox1.getSelectedItem(); 
           //    this.cvo.m1=(String)jComboBox2.getSelectedItem(); 
            //   this.cvo.m2=(String)jComboBox3.getSelectedItem(); 
            //   this.cvo.m3=(String)jComboBox4.getSelectedItem(); 
               
            //  String d[]=s.split("-");
            //  Date fd=new Date(Integer.parseInt(d[0]),Integer.parseInt(d[1]),Integer.parseInt(d[2]));
                   //this.cvo.followdt=Date.valueOf(s1) ;
             
            //this.cvo.followdt= fd ;
              
                Calendar cal = GregorianCalendar.getInstance();
                
               int y=Integer.parseInt(d[2]);
               int m=Integer.parseInt(d[1]);
               int dd=Integer.parseInt(d[0]);
                
			    cal.set( y,m-1,dd); 
                            
                     //today's change 6/11/2017       
               
                
                int dayOfWeek = cal.get(Calendar.DAY_OF_WEEK);    
	    
	        System.out.println("Day of Week"+dayOfWeek); // This will return 2. 2=Monday
             
                 //till here today's change 6/11/2017           
                            
                            
                            
                            
                            
			java.util.Date   dx = cal.getTime(); 
                 System.out.println("til"+dx);
                 
                 
                 
                 
                 java.sql.Date sqlDate1 = new java.sql.Date(dx.getTime()); 
                 System.out.println(sqlDate1);
              
              
              
              
              
              
              
              
              
              
             // java.sql.Date ud=Date.valueOf(s1);
             // System.out.println("ud"+ud);
            Vector vo= (Vector) PatientDao.selectPatient(sqlDate1);
           /* Iterator it=vo.iterator();
            while(it.hasNext())
            {
                System.out.println(it.next());
            }*/
            jList1.setListData(vo);
            System.out.println("vc"+vo);
            //  this.cvo.followdt=new java.sql.Date(ud.getTime());
             // System.out.println("dt1"+cvo.followdt);
              
              System.out.println("yes...");
            //  this.cvo.followdt=ud;
           
               //System.out.println(cvo);
                 
                      
                
              int option= JOptionPane.showConfirmDialog(this, "Confirm Updations?","",JOptionPane.YES_NO_OPTION);
                
                if(option==JOptionPane.YES_OPTION)
                {
            int x=  PatientDao.updatePatient(reg,sqlDate1);
            
                       System.out.println("x in update"+x);
                  if(x==1)
                  JOptionPane.showMessageDialog(this,"Record Updated");
                   this.setVisible(false); 
                 // System.exit(0); 
                  //  NetbeanJavaClinicApp.main(args);
                   
                   /* rev 2 */
                    cvo.followdt=sqlDate1;
                     
                System.out.println("CVO"+cvo);
                        
             pf2=new PrintExample(cvo,new Prescription2(cvo));
            // pf2.setCvo(cvo);
                    
           //  vc=0;
            // this.dispose();
                    
              }             
                    
          }
                
              else
                  JOptionPane.showMessageDialog(this,"Not Availabel");
              //System.exit(0);
              
             //  String[] split = s.split("/");
             //  int d=Integer.parseInt(split[0]);
             //   int m=Integer.parseInt(split[1]);
             //    int y=Integer.parseInt(split[2]);
                // java.util.Date ud=new java.util.Date(y,m,d);
            /*    java.sql.Date ud=Date.valueOf(s);
                 //   this.cvo.followdt=new java.sql.Date(ud.getTime());
               this.cvo.followdt=ud;
               PatientDao.insertCust(cvo);
               System.out.println(cvo);
              jDialog1.show();
               System.exit(0);*/
              //System.exit(0);
            } catch (SQLException ex) {
                Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
           
  
                       }
    
           }
    }

    private boolean checkDt(String[] d) {
        
         if((d[1].equals("1"))&&(d[0].equals("26")))
                   
                return false;
        
        if((d[1].equals("1"))&&(d[0].equals("28")))
                   
                return false;
        
         if((d[1].equals("5"))&&(d[0].equals("28")))
                   
                return false;
         
         
          if((d[1].equals("7"))&&(d[0].equals("10")))
                   
                return false;
          
          if((d[1].equals("7"))&&(d[0].equals("22")))
                   
                return false;
          
          if((d[1].equals("8"))&&(d[0].equals("15")))
                   
                return false;               
        
          
          
        
        
            return true;
        
        //throw new UnsupportedOperationException("Not yet implemented");
    }
}