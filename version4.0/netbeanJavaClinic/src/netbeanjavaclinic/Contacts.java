/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Dignosis.java
 *
 * Created on 29 Sep, 2011, 11:25:37 PM
 */
package netbeanjavaclinic;

import billingdesktopapplication.MyJPane;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Date;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.text.JTextComponent;

/**
 *
 * @author DELL
 */
public class Contacts extends javax.swing.JFrame implements ActionListener {
public PatientVO cvo;
int reg;
    /** Creates new form Dignosis */
    public Contacts()
    {
        
        
    }
    public Contacts(int x) {
        initComponents();
        reg=x;
        jButton1.addActionListener(this);
         jButton2.addActionListener(this);
          jButton3.addActionListener(this);
          
        jButton1.setText("OK");
          jButton2.setText("Show Calendar");
          jButton3.setText("Exit");
          
          jLabel6.setText("Start Date");
           jLabel5.setText("End Date");
         this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
           
         
    }

   

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        jDialog1.setName("jDialog1"); // NOI18N

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(netbeanjavaclinic.NetbeanJavaClinicApp.class).getContext().getResourceMap(Contacts.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 102));
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 20, 100, 30));

        jTextField1.setName("jTextField1"); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 124, 30));

        jButton1.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 450, 120, 35));
        jButton1.getAccessibleContext().setAccessibleDescription(resourceMap.getString("jButton1.AccessibleContext.accessibleDescription")); // NOI18N

        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 450, 120, 30));

        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 450, 260, 30));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jList1.setName("jList1"); // NOI18N
        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 70, 260, 360));

        jTextField2.setName("jTextField2"); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 20, 124, 30));

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setForeground(resourceMap.getColor("jLabel6.foreground")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 100, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Appointment(428,new PatientVO()).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
     public void setText(String s,int flag)
     {
         if(flag==1)
         {
         jTextField1.setText(s);
         flag=0;
         }
       else  if(flag==2)
       {
          jTextField2.setText(s); 
          flag=0;
       }
         
     }
   
    public void actionPerformed(ActionEvent e) {
        
        if(e.getSource()==jButton3){
            
           
            System.exit(0);
        }
     
        if(e.getSource()==jButton2)
      {
         System.out.println("calendar");
     MyJPane mjp=new MyJPane(new JPanel(),this);
            
            Container cp=this.getContentPane() ;
            try{
		cp.add(mjp);
            }catch(Exception e1){
                System.out.println("excep");
            }
                 this.setExtendedState(JFrame.NORMAL); 
                 System.out.println("helll");
                  this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
             // this.resize(1000,1000);
      }
        
      else
      {
           try {
                  String s=jTextField1.getText();
                   String d[]=s.split("-");
                
                boolean b=checkDt(d);
                if(b==true){
              //  String d1[]={d[2],d[0],d[1]};
                String s1=d[2]+"-"+d[0]+"-"+d[1];
             // Date fd=new Date(Integer.parseInt(d[0]),Integer.parseInt(d[1]),Integer.parseInt(d[2]));
              // System.out.println("ap called");
                
                
               
               
                 SimpleDateFormat d1=new SimpleDateFormat("yyyy-dd-mm");
                //  SimpleDateFormat d1=new SimpleDateFormat("dd-mm-yyyy");
                 d1.setLenient(false);
                 
               JFormattedTextField jtff=    new JFormattedTextField(d1);
            //  String s=jTextField1.getText();
                 System.out.println("dt"+s1);
                  try{
                    d1.parse(s1);
                    
                  }
                  catch(ParseException pe){
                  
                  
                  System.out.println("in catch");
                   JOptionPane.showMessageDialog(jTextField1,"no dt format","Error Dialog",
                     JOptionPane.ERROR_MESSAGE);
          
          
                     }
          
              
                Calendar cal = GregorianCalendar.getInstance();
                
               int y=Integer.parseInt(d[2]);
               int m=Integer.parseInt(d[1]);
               int dd=Integer.parseInt(d[0]);
                
			    cal.set( y,m-1,dd); 
			java.util.Date   dx = cal.getTime(); 
                 System.out.println("til"+dx);
                 
                 java.sql.Date sqlDate1 = new java.sql.Date(dx.getTime()); 
                 System.out.println(sqlDate1);
              //  for second date
                  
                //   try {
                    String sr=jTextField2.getText();
                      String dr[]=sr.split("-");
                
                    boolean br=checkDt(dr);
                   if(br==true)
                   {
              //  String d1r[]={dr[2],dr[0],dr[1]};
                    String s1r=dr[2]+"-"+dr[0]+"-"+dr[1];
             // Date fdr=new Date(Integer.parseInt(dr[0]),Integer.parseInt(dr[1]),Integer.parseInt(dr[2]));
              // System.out.println("ap called");
                
                   
               
               
                      SimpleDateFormat d1r=new SimpleDateFormat("yyyy-dd-mm");
                //  SimpleDateFormat d1r=new SimpleDateFormat("dd-mm-yyyy");
                       d1r.setLenient(false);
                 
                     JFormattedTextField jtffr=    new JFormattedTextField(d1r);
            //  String sr=jTextField2.getText();
                   System.out.println("dt"+sr);
                   try{
                    d1r.parse(s1r);
                    
                       }
                    catch(ParseException pe){
                  
                  
                     System.out.println("in catch");
                     JOptionPane.showMessageDialog(jTextField2,"no dt format","Error Dialog",
                     JOptionPane.ERROR_MESSAGE);
          
          
                          }
          
                   }
                Calendar calr = GregorianCalendar.getInstance();
                
               int yr=Integer.parseInt(dr[2]);
               int mr=Integer.parseInt(dr[1]);
               int ddr=Integer.parseInt(dr[0]);
                
			    calr.set( yr,mr-1,ddr); 
			java.util.Date   dxr = calr.getTime(); 
                 System.out.println("til"+dxr);
                 
                 java.sql.Date sqlDate1r = new java.sql.Date(dxr.getTime()); 
                 System.out.println("r"+sqlDate1r);
              
                  
                  
                  
                  
                 // */
              
             Vector vo1= (Vector) PatientDao.selectPatient(sqlDate1,sqlDate1r);
           // Vector vo= (Vector) PatientDao.selectPatient(sqlDate1);
           
            jList1.setListData(vo1);
            System.out.println("vc"+vo1);
            
              System.out.println("yes...");
            
                      
                
              //<editor-fold defaultstate="collapsed" desc="comment">
              int option= JOptionPane.showConfirmDialog(this, "Confirm Updations?","",JOptionPane.YES_NO_OPTION);
              
              if(option==JOptionPane.YES_OPTION)
              {
                  int x=  PatientDao.updatePatient(reg,sqlDate1);
                  
                  System.out.println("x in update"+x);
                  if(x==1)
                      JOptionPane.showMessageDialog(this,"Record Updated");
                  this.setVisible(false);
                  // System.exit(0);
                  //  NetbeanJavaClinicApp.main(args);
                  
              }
              
                }
                else
                    JOptionPane.showMessageDialog(this,"Not Availabel");
                //System.exit(0);
                //</editor-fold>
              
             //  String[] split = s.split("/");
             //  int d=Integer.parseInt(split[0]);
             //   int m=Integer.parseInt(split[1]);
             //    int y=Integer.parseInt(split[2]);
                // java.util.Date ud=new java.util.Date(y,m,d);
            /*    java.sql.Date ud=Date.valueOf(s);
                 //   this.cvo.followdt=new java.sql.Date(ud.getTime());
               this.cvo.followdt=ud;
               PatientDao.insertCust(cvo);
               System.out.println(cvo);
              jDialog1.show();
               System.exit(0);*/
              //System.exit(0);
            } catch (SQLException ex) {
                Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
           
  
                       }
                
                }
            
     }
    private boolean checkDt(String[] d) {
        
         if((d[1].equals("1"))&&(d[0].equals("26")))
                   
                return false;
        
        if((d[1].equals("1"))&&(d[0].equals("28")))
                   
                return false;
        if((d[1].equals("3"))&&(d[0].equals("23")))
                   
                return false;
         if((d[1].equals("5"))&&(d[0].equals("28")))
                   
                return false;
         if((d[1].equals("6"))&&(d[0].equals("13")))
                   
                return false;
         
          if((d[1].equals("7"))&&(d[0].equals("10")))
                   
                return false;
          if((d[1].equals("8"))&&(d[0].equals("15")))
                   
                return false;
         
                
        if((d[1].equals("9"))&&(d[0].equals("19")))
                   
                return false;
         if((d[1].equals("9"))&&(d[0].equals("29")))
                   
                return false;
        if((d[1].equals("10"))&&(d[0].equals("24")))
                   
                return false;
        if(d[1].equals("11"))
                {
                    int x=Integer.parseInt(d[0]);
                    if((x<18)&&(x>11))
                   
                return false;
                }     
        
        
            return true;
        
        //throw new UnsupportedOperationException("Not yet implemented");
    }
}